/* after use clear all vars
pja 01-04-2020 editing act1
-------------- clearing sql problems
-------------- added drops after ==( tests
pja 01-02-2020 editing actCase
pja 12-29-2019 editing act1
pja 12-28-2019 changed wword to fpword
               dup before ==token 
pja 12-27-2019 added comments
pja 12-1-2019 orig

basii protocol output-filename [ def paragraph :- [ [[ clause-number ]] [ verbs till period ] ] till ; ] till @endend
*/
smartRDFX.py

def RDFMain :-
[[ 1 ]]  "script file" ask dup "scriptF" ! initIOI  RDFMain2 . 
;

def RDFMain2 :-
[[ 1 ]] fpword ... .
[[ 2 ]] ==RDF getSubject 
        fpword "predicate" ! getObject act1 tail. .
[[ 3 ]] "not RDF header " msg .
;

def getSubject :-
[[ 1 ]] fpword ... .
[[ 2 ]] dup ==( drop complexSubject fpword ==)  .
[[ 3 ]] "subject" !  .
;

def complexSubject :-
[[ 1 ]] fpword "ssubject" ! ... .
[[ 2 ]] fpword "spredicate" ! ... .
[[ 3 ]] fpword "sobject" !  .
;

def getObject :-
[[ 1 ]] fpword ... .
[[ 2 ]] dup ==( drop complexObject fpword ==)  .
[[ 3 ]] "object" !  .
;

def complexObject :-
[[ 1 ]] fpword "osubject" ! ... .
[[ 2 ]] fpword "opredicate" ! ... .
[[ 3 ]] fpword "oobject" !  .
;

def initIOI :- 
/* sets up fioiClass vectors 
g: filename on datastack 
*/ 
[[ 1 ]] "fioiP" takeV ... . /* file parser */
[[ 2 ]] "RDF.db" "SQV" takeV ... . /* database */
[[ 3 ]] "create table if not exists RDFTuple ( subject , predicate, object, ssubject, spredicate, sobject, osubject, opredicate, oobject);" SQX .
;
def act1 :- 
[[ 1 ]] 
/* save a complete tuple */
/* cv format */
"0"
"subject" @ "subject" 
"predicate" @ "predicate" 
"object" @ "object" 
"ssubject" @ "ssubject" 
"spredicate" @ "spredicate" 
"sobject" @ "sobject" 
"osubject" @ "osubject" 
"opredicate" @ "opredicate" 
"oobject" @ "oobject" 
"RDFTuple" /* table name */
SQWrite

/* clear */
"" "subject" !
"" "predicate" !
"" "object" !
"" "ssubject" !
"" "spredicate" !
"" "sobject" !
"" "osubject" !
"" "opredicate" !
"" "oobject" !
.
;
  
@endend @endend

