{{
file xsdP.PD
xsd parser
pja 4-29-2020 rewrite using cut parsing methods
--- ie "<" till ">"
pja 04-20-2020 testing
-------- added RDFWrite
pja 4-16-2020 rewrite see graphml
pja 4-8-2020 rewrite
pja 4-1-2020 rewrite
pja 03-31-2020

debug at 10000
}} 
drop
import useLib
import bbox
bbox.main('bmain')
bbox.start()

'pd2020V'
takeV
PDInit
lib0
{{
comment [[ init ]] .
2 [[ call/1000/3 ]] ->
3 [[ call/2000/4 ]] --> 4 .
comment [[ 4 begin ]] .
4 [[ 
'cxsdfn' @ 'script' ! ]] -> 20 .
20 [[
'script' @
dup "<" find cut
dup ">" find cut
'script' !
cat cat 'r0' !
'f1' !
'r0' @ '1' cx 'rx' !
]] --> 21 .
comment [[ 21 rx fan ]] .
21 [[ 'rx' @ '?' = ]] -> 30 .
21.22 [[ 'rx' @ '!' = ]] -> 40 .
22.23 [[ 'rx' @ '/' = ]] -> 50 .
23.24 [[ 'rx otherwise' msg .s dumpNDS ]] .

comment [[ ? get tagName ]] .
''
'cellna'
!
''
'atname'
!
''
'atVal'
!
'<?na1 at1="val1" at2="val2"?>'
'r0'
!

{{
35 [[ 'r0' @ dup ' ' find cut 'r0' ! drop 'r1' ! 'r1' @ len "2" 'r1' @ slice 'cellna' ! ]] --> 300 .
10000 [[ 'error' msg .s dumpNDS "??" ask endcall ]] .
35.36 [[ call/10000/-99 ]] .
300 [[ '300' msg
'r0' @ dup ' ' find cut 'r0' ! drop 'r2' ! ]] -> 301 .
301 [[ '301' msg 'r2' @ dup '=' find '301a' msg cut 'r3' ! drop 'atname' ! ]] -> 302 .
302 [[ '302' msg 'r3' @ c1 Q? 'r3' @ woB 'atVal' ! ]] -> 303 .
303 [[ '303' msg call/400/300 ]] .
400 [[ 'atVal' @ 'atname' @ 'atList' @ dr! 'atList' ! endcall ]] .
2 [[ dr0 'atList' ! ]] .
300.3000 [[ '3000' msg call/10000/-99 ]] .
301.3010 [[ '3010' msg call/10000/-99 ]] . 
302.3020 [[ '3020' msg call/10000/-99 ]] .
303.3030 [[ '3030' msg call/10000/-99 ]] .
end
}}



30 [[ '30' msg 'r0' @ dup ' ' find cut .s '3' pick 
'cellname' ! 'cellname' @ len "2" 'cellname' @ slice 'cellname' !
'r0' ! drop drop ]] -> 36 .
30.31 [[ '31' msg .s ]] .

comment [[ get att ?> ]] .
36 [[ '36' msg 'r0' @ dup ' ' find cut 'r0' !  drop 'r2' ! ]]  -> 300 .
36.37 [[ '37' msg .s ]] .
300 [[ '300' msg 'r2' @ dup '=' find cut  
dup len "1" - "1" "3" pick slice
'attval' ! drop drop 'attName' !
'attVal' @ 'attName' @ 'attList' @ dr! 'attList' !
]] --> 36 .
300.305 [[ '305 attDone' msg .s ]] .




comment [[ tools ]] .
1000 [[  
'xsd Version 2020-04-30 6:55' msg endcall  ]] .

2000 [[
'xsdInit' drop 'xsd file name' ask 'xsdfn' ! 
'heapV' takeV heapInit 'fileV' takeV 
"xdb.db" "SQV" takeV
"TRCV" takeV "gennV" takeV "arV" takeV 
'xsdfn' @ f@ 'cxsdfn' ! TRCV+ TRCV0
"0" 'xfpos' !  "0" 'pu' ! 
ar0 "GCL" ! "0" 'GCLix' !
ar0 'parents' ! "0" 'parentIX' ! ]] -> 
2010 [[ '' call/3000/2020 ]] -->
2020 [[
dr0 'attList' ! "0" 'epos' ! 
endcall 
]] .

3000 [[
"parentsPlus - 3000" drop
'parentIX' @ 'parents' @ ar! 'parents' !
'parentIX' @++ drop 
endcall
]] .

100 [[
"xioi" drop
'xpos=(' 'xfpos' @ cat ")" cat msg 
'cxsdfn' @ 'xfpos' @ cx dup msg 
 'xfpos' @++ drop 
endcall ]] .

101 [[ call/100/-99 ]] .

200 [[
'xfpos' @-- drop 
endcall
]] .
201 [[ call/200/-99 ]] .

210 [[ call/100/220 ]] -> 220 [[ "<" = ]] --> 221 [[ endcall ]] .
220.230 [[ ]] -> 210 .

end
}}
PDC
xxxxxxxxxxx

def xbegin :- [[ 2 ]] 
xsdVersion xsdInit 
"L1" step . ;

def L1 :-
[[ 1 ]] 
/* protected slide to < */
'p1' protected xioi "L1a1" step .
;

def p1 :-
/* stops on the < */
[[ 200 ]] xioi 'mp1' ! ... .
[[ 2 ]] 'mp1' @ "<" = xioo . 
[[ 2 ]] tail. .
;
200 [[ call/xioi/201 ]] --> 
201 [[ 'mp1' ! ]] -> 
202 [[ "<" = call/xioo/203 ]] . 
203 [[ endcall ]] .             
201.205 [[ ]] -> 200 . 

def L1a1 :-
[[ 1 ]] xioi 'dl1.1' ! "fan1" step .
;

def fan1 :-
[[ 1 ]] 'dl1.1' @ "?" = "fan2" step 
         "schemaChk" step xioi /* ? */ drop
         "lastChk" step .
[[ 2 ]] 'dl1.1'  @ "!" = xioi drop "procBang" step 
         xioi /* ! */ drop
         "lastChk" step .
[[ 3 ]] 'dl1.1'  @ "/" = "fan4" step .
[[ 4 ]] /* otherwise */
        "ParseNodeName" step 
        "ParseAttributes" step
        "fan30" step
        "Garbage" step
        .
;
def schemaChk :-
[[ 1 ]] "dcfan2" @ "schema" =
        "schema" "parentPlus" step
        "parseAttributes" step 
        "writeRecords" step
        .
[[ 2 ]] . /* optional */
;

def parseAttributes :-
/* optional space attna=quotedValue */
[[ 1 ]] xioi 'dpa' ! ... .
[[ 2 ]] 'dpa' @ ' ' =
        "getattributeName" step /* to attName */
        "getAttributeValue" step /* to attributeValue */
        "AttributeValue" @ "attName" @ 
        'attList' @ dr! 'attList' ! 
        tail. .
[[ 3 ]] xioo .
;

def getAttributeValue :-
/* = ; quoted string */
[[ 1 ]] xioi dup 'gas' ! '=' =
        '' "AttributeValue" !
        '' 'dgav2' !
        GAV2 .
[[ 2 ]] 'expectd = after attribute name got ('  'gas' @ cat
        ') instead' cat
        ' at ' cat 'xpos' @ cat "abort" step .
;
def GAV2 :-
[[ 1 ]]  xioi 'dgav2' ! ... .
[[ 2 ]]  'dgav2' @ Q? "GAVtillQ" step .
[[ 3 ]]  'dgav2' @ T? "GAVtillT" step .
[[ 4 ]] 'expected quoted string after =  got ('
        'dgav2' @ cat 
        ') instead. ' cat
        ' at ' cat 'xpos' @ cat "abort" step .
;
def GAVtillQ :-
/* stops on end quote */
[[ 1 ]]  xioi 'dgav2' ! ... .
[[ 2 ]]  'dgav2' @ Q? .
[[ 3 ]] "AttributeValue" @ 'dgav2' @  cat
        "AttributeValue" ! tail. .
;
def GAVtillT :-
[[ 1 ]]  xioi 'dgav2' ! ... .
[[ 2 ]]  'dgav2' @ T?  .
[[ 3 ]] "AttributeValue" @ 'dgav2' @  cat
        "AttributeValue" ! tail. .
;

def getattributeName :-
[[ 1 ]] '' 'attName' ! '' 'atc' !
        "GAN2" step 
        'attName' @ 'garbageIn' step
        .
;
def GAN2 :-
/* parse to = */
[[ 1 ]] xioi 'atc' ! ... .
[[ 2 ]] 'atc' @ '=' =  xioo .
[[ 5 ]] 'attName' @ 'atc' @ cat
        'attName' ! tail. .
;

def fan30 :-
[[ 1 ]] xioi 'dfan30' ! ... .
/* fan 30 */
[[ 2 ]] 'dfan30' @ '/' = 
        "ParentPlus" step
        "writeRecords" step
        "ParentPop" step
        "lastChk" step
        .
[[ 3 ]] 'dfan30' @ '>' = 
        "fctillLT2XN3" step
        "XN3Fan" step .
[[ 4 ]] 'expected / or > after </name at (' 'xpos' @ cat ')' cat "abort" step .
;
def fctillLT2XN3 :-
/* collect till < but not < */
[[ 1 ]] '' 'XN3' ! '' 'dxn3' !
"fctillLT2XN3a" step .
;
def fctillLT2XN3a :-
[[ 1 ]] xioi 'dxn3' ! ... .
[[ 2 ]] 'dxn3' @ "<" = xioo .
[[ 3 ]] 'XN3' @ 'dxn3' @ cat 
        'XN3' ! tail. .
;
def XN3Fan :-
/* trim white from XN3 */
[[ 1 ]] 'XN3' @ white 'XN3' !
/* XN3 white fan */
[[ 2 ]] 'XN3' @ len "0" = .
[[ 3 ]] 'XN3' @ 'NodeValue' !
        'NodeValue' @ 'garbageIn' step
        "parentPlus" step
        "writeRecords" step .
;

def procBang :-
/* Xtill ! stop on ! */
[[ 1 ]] xioi ... .
[[ 2 ]] '!' = .
[[ 3 ]] tail. .
;

def fan2 :-
/* Xctillor space,?,> */
[[ 1 ]] '' 'dcfan2' ! "fan2a" step .
;
def fan2a :-
[[ 1 ]] xioi 'dcfan2a' ! ... .
[[ 2 ]] 'dcfan2a' @ ' ' = xioo .
[[ 3 ]] 'dcfan2a' @ '?' = xioo .
[[ 4 ]] 'dcfan2a' @ '>' = xioo .
[[ 5 ]]  'dcfan2' @ 'dcfan2a' @ cat 'dcfan2' ! tail. .
;
def ParseNodeName :-
[[ 1 ]] "Xlabel" step ... .
[[ 2 ]] xioi 'dpnn' ! ... .
/* fan3 */
[[ 3 ]] 'dpnn' @ ':' =
        'XN1' @ 'XMNLS' !
        "Xlabel" step 'XN1' @ 'Xna' !
        "Xna" @ "garbageIn" step
        'XMNLS' @ "garbageIn" step
        "PickupPosition" @++
        "PickupPosition" @ 
        "NodePosition" ! .
[[ 4 ]] 'XN1' @ "Xna" !
        "Xna" @ 'garbageIn' step
        "PickupPosition" @++
        "PickupPosition" @ 
        "NodePosition" ! .
;


        
def fan4 :-
/* at </ na does na = last parent */
[[ 1 ]] "ParseNodeName" step /* to Xna */
/* fan4 */
[[ 2 ]] 'Xna' @ 'parent' @ ar# ar@ = 
       "parentPop" step 
       "lastChk" step 
       .
[[ 3 ]] .
;

def lastChk :-
[[ 1 ]] xioi 'dlastc' ! ... .
/* fanlast */
[[ 2 ]] 'dlastc' @ ">" = .
[[ 3 ]] 'expected > got ' 'dlastc' @ cat ' instead at position (' cat 'xpos' @ cat ')' cat "abort" step .
;

def xsdInit :-[[ 2000 ]] ;

def parentPlus :-
/* (na,,) */
[[ 1 ]] 'parentIX' @ 'parents' @ ar! 'parents' !
        'parentIX' @++ drop .
;


def abort :-
[[ 1 ]] msg dumpNDS .s "0" quit .
;

def Xlabel :-
/* collect till " ",:,/,>,= */
[[ 1 ]] '' 'cstr' ! 'xfpos' @ 'lfo' ! "Xlabel2" step  .
;

def Xlabel2 :-
/* collect till " ",:,/,>,= */
[[ 1 ]] xioi 'lx' ! ... .
[[ 2 ]] 'lx' @ ' ' = "XlabelFinal" step .
[[ 3 ]] 'lx' @ ':' = "XlabelFinal" step .
[[ 4 ]] 'lx' @ '/' = "XlabelFinal" step .
[[ 5 ]] 'lx' @ '>' = "XlabelFinal" step .
[[ 6 ]] 'lx' @ '=' = "XlabelFinal" step .
[[ 7 ]] 'cstr' @ 'lx' @ cat 'cstr' ! tail. .
;

def XlabelFinal :-
[[ 1 ]] 'cstr' @ len "0" <> xioo 'csrt' @ .
[[ 2 ]] 'lfo' @ 'xfpos' ! ... .
; 

/* xioo,xioi,xxio1 */

def xioi :-
[[ 100 ]] 
'xpos=(' 'xfpos' @ cat ")" cat msg 
'cxsdfn' @ 'xfpos' @ cut 
drop swap drop
c1 'xfpos' @++ drop dup
'ans=(' swap  cat ")" cat msg 
. 
;
def garbageIn :-
/* add name to garbage (na,,) GCL,GCLix */
[[ 1 ]] 'GCLix' @ 'GCL' @ ar! 'GCL' ! 
        'GCLix' @++ drop .
;

def xxioi :-
[[ 1 ]] xioi xioi cat .
;

def xioo :-
[[ 1 ]] 'xfpos' @-- drop .
;

def step :-
/* (na,,) null=go else bmain */
[[ 1 ]] 'sta' ! "step " "sta" @ cat  "- null" cat ask 'stx' ! ... .
[[ 2 ]] 'stx' @ len "0" = 'sta' @ .X .
[[ 3 ]] bmain .
;
def writeRecords :-
[[ 1 ]]  "RDFWrite" step 
       "writeProfile" step
       .
;

def writeProfile :-
[[ 1 ]] "6" h^ 
       /* [1-ix 2-atlist 3-atn 4-atv 5-en 6-max] */
       "0" "1" h!
       "dcfan2" @ "5" h!
       "attList" @ drK "2" h!
       "2" h@ len "6" h! 
       "perProfile" step hx .
;

def perProfile :-
[[ 1 ]] "1" h@ ix "6" h@ <> 
     "2" h@ ar@ "3" h!
     "1" h@ "1" + "1" h! 
     "3" h@ "attList" @  dr@ "4" h!
     /* TRCV record */
     'profile' "5" h@ "3" h@ "4" h@ TRCV!
     tail. .
[[ 2 ]] .
;

def RDFWrite :-
[[ 1 ]] "2" h^
    'parents' @ len "1" -
    'parents'@ ar@ /* last parent */
    "1" h! /* stored in h1 */
    'parents' @ len "2" -
    'parents' @ ar@ /* last-1 */
    "2" h! /* stored in h2 */
    /* build TRCV records */
    'RDF' "2" h@ 'child' "1" h@ 
    TRCV!
    'RDF' "1" h@ 'parent' "2" h@ TRCV!
hx .
;

/* version */

@endend @endend @endend
 

import useLib
import bbox
bbox.main('bmain') 
bbox.start()      


@endend @endend @endend